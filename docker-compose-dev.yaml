services:
  postgres:
    image: postgres:16.3-alpine
    restart: always
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_USER: messenger_admin
      POSTGRES_PASSWORD: R0t4@dm1n
      POSTGRES_DB: messenger_db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:8.9
    restart: always
    ports:
      - "5052:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgpass:/pgadmin4/pgpass
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    depends_on:
      - postgres
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"
  rabbitmq:
    image: rabbitmq:3.13.4-management
    restart: "no"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  messenger:
    image: messenger:dev
    build: .
    restart: always
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      MSG_DB_URL: jdbc:postgresql://postgres/messenger_db
volumes:
  postgres_data:
  pgadmin_data: